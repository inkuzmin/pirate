// Generated by CoffeeScript 1.4.0
(function() {
  var ids, insertAfter, route, setBitrate, testTargetForPlayButton;

  if (window.top === window) {
    route = function(event) {
      var cmd;
      cmd = event.name;
      switch (cmd) {
        case "setBitrate":
          return setBitrate(event.message);
      }
    };
    setBitrate = function(audio) {
      var aNode, divNode;
      aNode = document.getElementById(audio.id);
      if (aNode) {
        divNode = document.createElement("div");
        divNode.className = "bitrate";
        divNode.innerHTML = "" + audio.bitrate + " kbit/s";
        return insertAfter(aNode, divNode);
      }
    };
    ids = [];
    testTargetForPlayButton = function(targetNode) {
      var aNode, audio, ident, inputNode, parentNode;
      if (targetNode.className === "play_new") {
        if (ids.indexOf(targetNode.id) === -1) {
          parentNode = targetNode.parentNode;
          inputNode = document.getElementById(targetNode.id.replace("play", "audio_info"));
          audio = inputNode.value.match(/(https?:\/\/.+\.(?:vkontakte\.ru|vk\.com|userapi\.com)\/.*.mp3),([0-9]+)/i);
          aNode = document.createElement("a");
          aNode.href = audio[1];
          ident = Math.floor(Math.random(0, 100000) * 1000000000000000000);
          aNode.id = ident;
          aNode.setAttribute('onclick', 'return false;');
          aNode.appendChild(targetNode);
          parentNode.appendChild(aNode);
          safari.self.tab.dispatchMessage("getBitrate", {
            url: audio[1],
            duration: audio[2],
            id: ident
          });
          return ids.push(targetNode.id);
        }
      }
    };
    insertAfter = function(targetNode, newNode) {
      return targetNode.parentNode.insertBefore(newNode, targetNode.nextSibling);
    };
    safari.self.addEventListener("message", route, false);
    document.addEventListener("mousemove", function(event) {
      return testTargetForPlayButton(event.target);
    }, false);
  }

}).call(this);
